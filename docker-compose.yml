version: '2'
services:
  nginx-proxy:
   container_name: nginx
   image: jwilder/nginx-proxy
   ports:
    - "80:80"
    - "443:443"
   volumes:
    - "/etc/nginx/vhost.d"
    - "/usr/share/nginx/html"
    - "/var/run/docker.sock:/tmp/docker.sock:ro"
    - "./certs:/etc/nginx/certs"

  letsencrypt-nginx-proxy-companion:
   image: jrcs/letsencrypt-nginx-proxy-companion
   volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
   volumes_from:
    - "nginx-proxy"

networks:
  default:
    external:
      name: nginx-proxy-net
      
# ---
# version: '3' # Version of the Docker Compose file format
# services:
#   nginx-proxy:
#     image: jwilder/nginx-proxy:alpine
#     restart: "always" # Always restart container
#     ports:
#       - "80:80" # Port mappings in format host:container
#       - "443:443"
#     labels:
#       - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy" # Label needed for Let's Encrypt companion container
#     volumes: # Volumes needed for container to configure proixes and access certificates genereated by Let's Encrypt companion container
#       - /var/run/docker.sock:/tmp/docker.sock:ro
#       - "nginx-conf:/etc/nginx/conf.d"
#       - "nginx-vhost:/etc/nginx/vhost.d"
#       - "html:/usr/share/nginx/html"
#       - "certs:/etc/nginx/certs:ro"
#   letsencrypt-nginx-proxy-companion:
#     image: jrcs/letsencrypt-nginx-proxy-companion
#     restart: always
#     container_name: letsencrypt-nginx-proxy-companion
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock:ro"
#       - "nginx-conf:/etc/nginx/conf.d"
#       - "nginx-vhost:/etc/nginx/vhost.d"
#       - "html:/usr/share/nginx/html"
#       - "certs:/etc/nginx/certs:rw"
#     depends_on: # Make sure we start nginx proxy container first
#       - nginx-proxy
# volumes: # Names of volumes that out containers will share. Those will persist on docker's host machine.
#   nginx-conf:
#   nginx-vhost:
#   html:
#   certs:

# networks:
#   default:
#     external:
#       name: nginx-proxy-net
